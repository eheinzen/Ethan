% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/auc.R
\name{auc}
\alias{auc}
\alias{auc.args}
\alias{auc}
\title{auc}
\usage{
auc.args(baseadj = TRUE, missadj = "last.known", onlybase = "NA",
  nobase = "NA", rescale = NULL)

auc(y, t, data, baseadj = FALSE, missadj = c("NA", "zero", "0", "none",
  "last.known", "lowest", "smallest", "highest", "biggest", "first", "baseline",
  "average", "mean"), onlybase = c("NA", "zero", "0"), nobase = c("NA",
  "zero", "0", "none"), rescale = NULL)
}
\arguments{
\item{baseadj}{Logical, denoting whether the AUC should be centered at the baseline value
(baseadj = TRUE) or not (baseadj = FALSE) (DEFAULT).}

\item{missadj}{A flag denoting how to deal with missing values at the end of y.
 \itemize{
   \item{'NA': Set the AUC to NA (DEFAULT)}
   \item{'zero': Set the AUC to 0. Can also be referred to as '0'}
   \item{'none': No adjustment; compute what AUC is available}
   \item{'last.known': Replace missing values with the last known value}
   \item{'lowest': Replace missing values with the lowest known value. Can also be referred to as 'smallest'}
   \item{'highest': Replace missing values with the highest known value. Can also be referred to as 'biggest'}
   \item{'first': Replace missing values with the baseline (first) value. Can also be referred to as 'baseline'}
   \item{'average': Replace missing values with the average of the known values. Can also be referred to as 'mean'}
}}

\item{onlybase}{A flag denoting how to deal with cases where there is only one
non-missing value. onlybase = 'zero' (or '0') will set the AUC to 0, while
onlybase = 'NA' will set it to NA (DEFAULT).}

\item{nobase}{A flag denoting how to deal with a missing baseline value.
\itemize{
  \item{'NA': Set the AUC to NA (DEFAULT)}
  \item{'zero': Set the AUC to 0. Can also be referred to as '0'}
  \item{'none': No adjustment; compute what AUC is available (the first known value will be considered
    as the baseline, but no longer at t[1].)}
}}

\item{rescale}{(Optional) A number denoting how to scale the AUC; if not missing,
the average AUC per time unit will be calculated and multiplied by this value.
(DEFAULT NULL means the AUC will not be scaled)}

\item{y}{A vector of y-values of any length, or else a character string denoting which
column in data the y-values should be taken from.}

\item{t}{A vector of t- (x-) values of the same length as y, or else a character string
denoting which column in data the t-values should be taken from. If t is missing,
the y-values are assumed to come in regular intervals (i.e. 1:length(y)).}

\item{data}{An optional data.frame from which y and t come.}
}
\value{
\code{auc} returns the area under the curve.

\code{auc.args} returns a list giving the five values. Used mostly as default arguments to other functions.
}
\description{
Calculate the area under the curve for longitudinal data.
}
\details{
\code{auc} won't work if you specify the data parameter but also specify vectors for y or t.
  It also won't work if there are any missing (non-finite) t-values. Any non-finite y-values are ignored.

\code{auc.args} creates a list giving the five "adjustment" variables in \code{auc}.
  The defaults are NOT the same as the defaults in \code{auc}, however.
  No error checking is done here! I'm counting on \code{auc} to catch all of those.
}
\examples{
auc(c(1,0,2,1,1,NA), missadj = 'none')
auc(c(1,0,2,1,1,NA), missadj = 'last.known')
auc(c(1,0,2,1,1,NA), missadj = 'lowest')
auc(c(1,0,2,1,1,NA), missadj = 'highest') # and so on

data <- data.frame(time = c(0,2,3,8), fold.change = c(1, 2, 3, 3))
auc("fold.change", "time", baseadj = TRUE, data = data)
}
